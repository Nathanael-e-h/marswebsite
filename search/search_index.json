{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>This is the website for all our documentation. Updated jan 16th 2023.</p> <p>MARS stands for the Metropolitan Aerospace Rocket Society. This year (2023), 10 teams will be participating in a competition to see who can launch the best rocket (method of determining so pending). Please check out our public google drive and github. This website is run on this repo, join our discord. This website is designed to last many generations, and to be as easy to contribute to as possible.</p>"},{"location":"Current-Projects/","title":"Overview","text":"<p>This is where we'll put the projects we're working on. There are many aspects of MARS. Primarily our mission is to teach lower years about engineering, however our secondary goal is to expand our scope of knowledge to become better engineers ourselves.</p>"},{"location":"Current-Projects/Launch-Pad/","title":"Overview","text":"<p>We need a launch pad for our model rockets. </p>"},{"location":"Current-Projects/TVC/","title":"TVC","text":"<p>Mars aspires to learn about new technologies. Check out the onshape file.</p>"},{"location":"Current-Projects/TVC/#iteration-1","title":"Iteration 1","text":"<p>This is the first iteration for the TVC</p>"},{"location":"Current-Projects/TVC/#iteration-2","title":"Iteration 2","text":""},{"location":"Current-Projects/Tasks/","title":"Tasks","text":"<p>This is a list of things that need to be done</p>"},{"location":"Current-Projects/Tasks/#admin","title":"Admin","text":"<ul> <li> Make roles for each team for the discord server<ul> <li> Team chats on discord</li> <li> Change discord name to real name</li> </ul> </li> <li> Each team gets assigned a lead need a write up for it</li> <li> Waitlist form</li> <li> Get another team</li> <li> Buy stuff<ul> <li> LC budget</li> <li> P card</li> <li> Cheq req everything else<ul> <li> Micro SD cards for teensies</li> <li> Home hardware</li> <li> Switch</li> <li> Stand off pins</li> </ul> </li> </ul> </li> <li> Finalize competition date</li> <li> Merch<ul> <li> stickers</li> </ul> </li> <li> On board Cameras for rockets</li> <li> Create anonymous feedback page</li> </ul>"},{"location":"Current-Projects/Tasks/#website","title":"Website","text":"<ul> <li> Documentation<ul> <li> How to contribute to this website</li> <li> Ground Station</li> <li> TVC</li> <li> Launch pad</li> <li> Avionics</li> <li> Add discord, google docs</li> <li> Add domain name</li> <li> Add formatting</li> <li> Section for each team to post their shit</li> <li> Competition outline</li> </ul> </li> <li> Open issue on material github to describe column separation problem (below)</li> <li> Add a way to link to things then be abl</li> </ul>"},{"location":"Current-Projects/Tasks/#avionics","title":"Avionics","text":"<ul> <li> Connection diagram for avionics<ul> <li> Get help from graphic designer or online tool</li> </ul> </li> <li> Get small GPS antenna</li> <li> Ground station front end</li> <li> Avionics save data flash then to SD card orr</li> <li> Avionics states, low power, high power, dump</li> <li> MavLink</li> </ul>"},{"location":"Current-Projects/Tasks/#structures","title":"Structures","text":"<ul> <li> Secure motors in place</li> </ul>"},{"location":"Guidelines/","title":"Guidelines","text":"<p>We have various documentation that teems will likely want to reference when they are setting up their avionics and rocket. In this section we will document it.</p>"},{"location":"Guidelines/Avionics-Guide/","title":"Overview","text":"<p>In this section we will provide an overview of the avionics.</p> <p> This is the board the teams will be using.  </p>"},{"location":"Guidelines/Avionics-Guide/flight-computer/","title":"index","text":"<p>In this section we will talk about how to solder and program the default flight computer. </p>"},{"location":"Guidelines/Avionics-Guide/flight-computer/#soldering","title":"Soldering","text":""},{"location":"Guidelines/Avionics-Guide/flight-computer/#programming","title":"Programming","text":""},{"location":"Guidelines/Avionics-Guide/ground-station/","title":"index","text":"<p>The ground station is a raspberry pi with an HC-12 connected to it running this python code:</p> <pre><code>import serial\nimport os\nimport csv\n\n# Function to create a new file name\ndef create_new_file_name(directory, base_name):\n    counter = 1\n    while True:\n        new_name = f\"{base_name}{counter}.csv\"\n        full_path = os.path.join(directory, new_name)\n        if not os.path.exists(full_path):\n            return full_path\n        counter += 1\n\n# Create a new directory if it doesn't exist\ndirectory = \"data\"\nif not os.path.exists(directory):\n    os.makedirs(directory)\n\n# Open serial port\nser = serial.Serial('/dev/serial0', baudrate=9600)\n\n# Generate a new file name\nfile_name = create_new_file_name(directory, \"1\")\n\n# Open the CSV file for writing\nwith open(file_name, mode='w') as file:\n    current_message = \"\"\n    while True:\n        data = ser.read().decode(\"utf-8\", errors='ignore')\n        if data == '\\n':\n            if current_message:\n                # Write the message to the CSV file\n                file.write(current_message + '\\n')\n                file.flush()\n                current_message = \"\"\n        else:\n            current_message += data\n</code></pre>"},{"location":"Guidelines/Competition-Guidelines/","title":"Competition Guidelines","text":""},{"location":"Guidelines/Competition-Guidelines/#outline","title":"Outline","text":"<p>The competition will be happening at CRC on May 18th. Each team will SSH into their raspberry pi and establish communication with their flight computer. A live stream of data should be recorded in real time. One by one, teams will launch and recover their rockets. After the flight, SD cards from the flight computer will be given to the judges for verification. We don't want to have post flight presentations. Instead, each team will have 30 minutes to submit a final pull request to the website. This will include graphs and gifs of their flight. Teams will have to prepare methods of interpreting and posting their data and gifs.</p>"},{"location":"Guidelines/Competition-Guidelines/#marking-schemes","title":"Marking Schemes","text":""},{"location":"Guidelines/Competition-Guidelines/#pdr","title":"PDR","text":"<p>Each team was marked based on the following rubric.</p> Criteria Level 1 Level 2 Level 3 Level 4 Group has team name? Team members are listed? Table of contents? (optional) Team Logo? (optional) Slide Formatting Parameters and Constraints Open Rocket Analysis Aerodynamic Analysis CAD Design Manufacturing Process Explanation Team Status Time Limit Eye Contact Voice and Clarity Enthusiasm"},{"location":"Guidelines/Competition-Guidelines/#avionics","title":"Avionics","text":"<ul> <li>Soldering</li> <li>Code</li> </ul>"},{"location":"Guidelines/Competition-Guidelines/#structures","title":"Structures","text":"<p>Teams will be marks on the construction and design of their rockets. This marking will be done before flight in a \"safety review.\"</p>"},{"location":"Guidelines/Competition-Guidelines/#launch-day","title":"Launch Day","text":"<p>Teams will be marked on their professionalism and performance of their avionics and rockets, as well as ability to adapt to problems. </p>"},{"location":"Guidelines/Competition-Guidelines/#post-launch","title":"Post Launch","text":""},{"location":"Guidelines/Competition-Guidelines/#documentation","title":"Documentation","text":"<p>Each team will be marked on their documentation which should be contributed to their teams section on the github. Teams are encouraged to contribute to the git repo at any time. There will be tutorials on how to make pull requests.</p>"},{"location":"Guidelines/Competition-Guidelines/#pfr","title":"PFR","text":"<p>There will be no PFR (post flight review), just documentation on the website.</p>"},{"location":"Guidelines/Rocket-Guide/","title":"Rocket Guide","text":"<p>This is where we will provide detailed info on the rocket, including its materials, how it's built and its flight. Check out the onshape for a view of it.</p> <p>The way this team works, is that we have a default template for everything including the rocket and the avionics. The teams are free to switch things and request special parts, but since most are beginners they just go with the default.</p>"},{"location":"Guidelines/Rocket-Guide/#components","title":"Components","text":"<p>We are using F motors. We decided to go with phenolic tubes. </p>"},{"location":"Guidelines/Website-Contribution-Guide/","title":"How to contribute to this website","text":"<p>In this section we will be describing all the steps necessary in making a contribution to your teams section on this website. There will be a mac and a windows guide.</p>"},{"location":"Guidelines/Website-Contribution-Guide/#gettings-started","title":"Gettings Started","text":"<p>This website is hosted on github. </p> <p></p>"},{"location":"Guidelines/Website-Contribution-Guide/#mac","title":"Mac","text":"<p>(Coming soon!)</p>"},{"location":"Guidelines/Website-Contribution-Guide/#windows","title":"Windows","text":"<ol> <li>Have a computer with Windows 10/11.</li> <li>Install WSL using Powershell (run as administrator): <pre><code>wsl --install\n</code></pre></li> <li> <p>Install VS Code from this website.</p> <p>NOTE: From this point forward, all commands are run in the WSL terminal within VSCode, not Powershell or Windows Terminal. You can access this terminal by opening VSCode and clicking Terminal &gt; New Terminal from the dropdown menus in the top left of the screen.</p> </li> <li> <p>Edit the following commands to include your email and username, then run to update your Linux distro: <pre><code>sudo apt update\nsudo apt upgrade\ngit config --global --get user.email\ngit config --global --get user.name\n</code></pre></p> </li> <li>Run the following commands to install the necessary software.<ol> <li><pre><code>sudo apt install python3-pip\n</code></pre> This installs Pip, a package manager used for the next few installations.</li> <li><pre><code>pip install mkdocs-material\n</code></pre> This installs MKDocs, the site generator we use to create in Markdown (which is itself a programming language of sorts).</li> <li><pre><code>echo 'export PATH=$PATH:/home/YOUR_USERNAME_HERE/.local/bin' &gt;&gt; ~/.bashrc\n</code></pre> This adds the MKDocs install folder to your path, which informs WSL where your install is, and how to make use of it. Don't forget to replace YOUR_USERNAME_HERE with the username you created in step 2. </li> </ol> </li> <li>Make sure VSCode launches by default in WSL. To do this, hit ctrl+, on your keyboard to enter settings, and search for \"default profile\" at the top of the page. Find the setting for \"Terminal \u203a Integrated \u203a Default Profile: Windows\" and open the associated settings.json file. Paste the following line right below your workbench.colorTheme setting: <code>\"terminal.integrated.defaultProfile.windows\": \"Ubuntu (WSL)\",</code>. The json file should look similar to this:  Once complete, save everything and restart VSCode. </li> <li>Run this entire block of code at once in your VSCode terminal: <pre><code>type -p curl &gt;/dev/null || (sudo apt update &amp;&amp; sudo apt install curl -y)\ncurl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \\\n&amp;&amp; sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \\\n&amp;&amp; echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main\" | sudo tee /etc/apt/sources.list.d/github-cli.list &gt; /dev/null \\\n&amp;&amp; sudo apt update \\\n&amp;&amp; sudo apt install gh -y\n</code></pre> This installs GitHub inside your new Linux install which will allow you to fork, and eventually contribute to, the website. Check out this link for more information. </li> <li> <p>Clone the repo &amp; open it in VScode:  <pre><code>git clone https://github.com/zeulewan/marswebsite.git\ncd marswebsite\ncode .\n</code></pre> If all went well, your interface should look a lot like this. IMPORTANT: make sure the blue box in the bottom left corner says WSL: Ubuntu. If there are any issues with that, repeat step 6 </p> </li> <li> <p>Run this command: <pre><code>git config pull.rebase true\n</code></pre> This instructs GitHub to merge your changes with others in the event someone makes changes to the main branch while you're still editing yours. </p> </li> <li> <p>You're all set! Make contributions to your teams' subfolder under marswebsite &gt; docs &gt; Teams. Once ready to publish to the website, click on source control (the third one in this menu): </p> <p></p> <p>Then type a commit message into this box that describes what changes you're trying to make to the website. Once complete, hit the big blue commit button:</p> <p></p> <p>It's going to prompt you a few things, hit yes to everything including the popup that asks you to fork the repo. This allows you to publish your own version of the website which the MARS team can then review and combine into the main website. Click sync changes once the blue button changes.</p> </li> <li> <p>Go to your own personal repo on GitHub and click contribute, like so. Click sync fork before contribute, only necessary if you see a message saying your branch is behind the main branch:  Sync fork will open up a new button called \"create pull request\". Once you press that, the MARS team will see your changes and be able to merge them onto the website!</p> </li> </ol>"},{"location":"Teams/","title":"Meet The Teams","text":"<p>Teams are free to keep their code closed source until after the competition.</p> Loading..."},{"location":"Teams/ICARUS/","title":"ICARUS","text":"<p>This is ICARUS. They are a team.</p>"},{"location":"Teams/Lockheed-Interns/","title":"Index","text":"<p>This is Lockheed Interns at the PDR.</p>"},{"location":"Teams/Los-Alamos-Laboratory/","title":"Index","text":"<p>This is Los Alamos Laboratory at the PDR.</p>"},{"location":"Teams/Lunar-Wolves/","title":"Index","text":"<p>This is the Lunar Wolves team at the PDR.</p>"},{"location":"Teams/OsaTech/","title":"Index","text":"<p> This is OsaTech at the PDR.</p>"},{"location":"blog/","title":"Latest Posts","text":""},{"location":"blog/2024/01/15/preliminary-design-review-pdr/","title":"Preliminary Design Review (PDR)","text":"<p> Today we successfully hosted the preliminary design reviews. Four out of the 9 currently registered teams showed up. There is one more on friday. </p>"},{"location":"blog/2024/01/17/updates-for-jan-17th/","title":"Updates for Jan 17th","text":"<p>More commits were made to the website today. I accepted a pull request from ICARUS, who added their image to the teams section. The tasks section was updated to include all the little things we have to work on. Documentation for the avionics was worked on, Nikolai wrote down all of the connection for the break out boards on the default flight computer. Oscar submitted all the P card requests (see image below), and we are planning to have a meeting with Alessia this friday or monday.</p> <p></p>"},{"location":"blog/2024/01/18/updates-for-jan-18th/","title":"Updates for Jan 18th","text":"<p>Minor edits made to the website, including the addition/onboarding of a new helping hand for development and documentation (hi Mom!). More edits will be forthcoming shortly as we begin to build our guides. </p>"},{"location":"blog/2024/01/16/site-updates/","title":"Site Updates","text":"<p>We are really trying to push for a great website with as much helpful information as possible on it. This website will evolve over time, and we want to make it as easy as possible for anyone to contribute to. We just added comments!</p>"},{"location":"blog/archive/2024/","title":"2024","text":""}]}